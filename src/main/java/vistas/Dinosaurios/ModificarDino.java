/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas.Dinosaurios;

import controladores.ControladorDinosaurios;
import controladores.ControladorHabitatDino;
import controladores.ControladorHabitats;
import entidades.Dino_Habitat;
import entidades.Dinosaurios;
import entidades.Habitats;
import javax.swing.JOptionPane;
import vistas.Principal;

/**
 *
 * @author Ailin
 */
public class ModificarDino extends javax.swing.JFrame {

    /**
     * Creates new form ModificarDino
     */
    public ModificarDino() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        IDaModificar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nombreModf = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dietaModf = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        prefAlimentoModf = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        domesticableModf = new javax.swing.JCheckBox();
        guardarDinoModf = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        habitatModificado = new javax.swing.JTextField();
        volver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Ink Free", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Modificar Dino");

        jLabel2.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Introduce el ID del dinosaurio a modificar:");

        IDaModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDaModificarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Modificar nombre:");

        nombreModf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreModfActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Modificar dieta:");

        dietaModf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Herbivoro", "Carnivoro", "Otro" }));
        dietaModf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dietaModfActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Preferencia alimento:");

        prefAlimentoModf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefAlimentoModfActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Si es domesticable, marque la casilla:");

        domesticableModf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domesticableModfActionPerformed(evt);
            }
        });

        guardarDinoModf.setBackground(new java.awt.Color(255, 255, 255));
        guardarDinoModf.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        guardarDinoModf.setForeground(new java.awt.Color(0, 0, 0));
        guardarDinoModf.setText("Guardar");
        guardarDinoModf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarDinoModfActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Por ultimo, escriba el habitat:");

        habitatModificado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                habitatModificadoActionPerformed(evt);
            }
        });

        volver.setBackground(new java.awt.Color(255, 255, 255));
        volver.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        volver.setForeground(new java.awt.Color(0, 0, 0));
        volver.setText("Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(guardarDinoModf)
                        .addGap(47, 47, 47)
                        .addComponent(volver))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel8)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(146, 146, 146)
                                        .addComponent(jLabel7)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(prefAlimentoModf, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(habitatModificado, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(domesticableModf)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel4))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nombreModf, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dietaModf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(IDaModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(IDaModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreModf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dietaModf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(prefAlimentoModf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(domesticableModf)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(habitatModificado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volver)
                    .addComponent(guardarDinoModf))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IDaModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDaModificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDaModificarActionPerformed

    private void nombreModfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreModfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreModfActionPerformed

    private void dietaModfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dietaModfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dietaModfActionPerformed

    private void prefAlimentoModfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefAlimentoModfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prefAlimentoModfActionPerformed

    private void domesticableModfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domesticableModfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_domesticableModfActionPerformed

    private void guardarDinoModfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarDinoModfActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(IDaModificar.getText().trim());
            String nombre = nombreModf.getText().trim();
            String dieta = (String) dietaModf.getSelectedItem();
            String preferencia = prefAlimentoModf.getText().trim();
            boolean domesticable = domesticableModf.isSelected();
            String habitatTexto = habitatModificado.getText().trim();

            if (nombre.isEmpty() || dieta.isEmpty() || preferencia.isEmpty() || habitatTexto.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            ControladorDinosaurios controlador = new ControladorDinosaurios();
            Dinosaurios dino = controlador.buscarDinoPorId(id);

            if (dino == null) {
                JOptionPane.showMessageDialog(this, "No se encontró un dinosaurio con ese ID", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Actualizar datos del dinosaurio
            dino.setNombre(nombre);
            dino.setTipo_DietaGeneral(dieta);
            dino.setPreferencia_Alimento(preferencia);
            dino.setDomesticable(domesticable);

            boolean actualizado = controlador.actualizarDino(dino);

            if (!actualizado) {
                JOptionPane.showMessageDialog(this, "Error al actualizar el dinosaurio.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Controlador para hábitats
            ControladorHabitats controladorHabitats = new ControladorHabitats();
            Habitats habitatExistente = controladorHabitats.buscarHabitatPorNombre(habitatTexto);

            if (habitatExistente == null) {
                // Crear nuevo hábitat si no existe
                Habitats nuevoHabitat = new Habitats();
                nuevoHabitat.setTexto_Habitat(habitatTexto);

                boolean habitatCreado = controladorHabitats.crearHabitat(nuevoHabitat);

                if (!habitatCreado) {
                    JOptionPane.showMessageDialog(this, "Error al guardar el hábitat en la tabla Habitats", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                habitatExistente = nuevoHabitat;
            }

            // Ahora trabajar con Dino_Habitat
            ControladorHabitatDino controladorHabitat = new ControladorHabitatDino();
            Dino_Habitat dinoHabitat = controladorHabitat.obtenerHabitatPorDino(dino);

            if (dinoHabitat == null) {
                // Crear nueva relación
                dinoHabitat = new Dino_Habitat();
                dinoHabitat.setDino(dino);
                dinoHabitat.setHabitat(habitatExistente);
                dinoHabitat.setFechaInsertado(new java.util.Date());

                boolean habitatCreadoDino = controladorHabitat.crearHabitat(dinoHabitat);

                if (habitatCreadoDino) {
                    dino.setHabitatDino(dinoHabitat);
                    JOptionPane.showMessageDialog(this, "Dinosaurio y hábitat creados con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Error al crear el hábitat en Dino_Habitat.", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                // Actualizar relación existente
                dinoHabitat.setHabitat(habitatExistente);
                dinoHabitat.setFechaInsertado(new java.util.Date());

                boolean habitatActualizado = controladorHabitat.actualizarHabitat(dinoHabitat);

                if (habitatActualizado) {
                    dino.setHabitatDino(dinoHabitat);
                    JOptionPane.showMessageDialog(this, "Dinosaurio y hábitat actualizados con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error al actualizar el hábitat en Dino_Habitat.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_guardarDinoModfActionPerformed

    private void habitatModificadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_habitatModificadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_habitatModificadoActionPerformed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        // TODO add your handling code here:
        Principal frame = new Principal();
        frame.setLocationRelativeTo(null);     // Centrar en pantalla
        frame.setResizable(false);             // No redimensionable
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_volverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarDino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarDino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarDino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarDino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarDino().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDaModificar;
    private javax.swing.JComboBox<String> dietaModf;
    private javax.swing.JCheckBox domesticableModf;
    private javax.swing.JButton guardarDinoModf;
    private javax.swing.JTextField habitatModificado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nombreModf;
    private javax.swing.JTextField prefAlimentoModf;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
