/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas.Dinosaurios;

import controladores.ControladorDinosaurios;
import controladores.ControladorHabitatDino;
import controladores.ControladorHabitats;
import entidades.Dino_Habitat;
import entidades.Dinosaurios;
import entidades.Habitats;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import vistas.Principal;

/**
 *
 * @author Ailin
 */
public class AñadirDino extends javax.swing.JFrame {

    /**
     * Creates new form AñadirDino
     */
    public AñadirDino() {
        initComponents();
    }

    // El método limpiarCampos() resetea todos los campos del frame para
    // que queden vacíos, facilitando ingresar un nuevo dinosaurio 
    // sin cerrar la ventana
    private void limpiarCampos() {
        nombre.setText("");
        preferenciaAlimento.setText("");
        habitatDino.setText("");
        domesticable.setSelected(false);
        tipoDieta.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tipoDieta = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        preferenciaAlimento = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        domesticable = new javax.swing.JCheckBox();
        guardar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        habitatDino = new javax.swing.JTextField();
        volver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Ink Free", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Añadir Dino");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Nombre:");

        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Tipo Dieta:");

        tipoDieta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Herbivoro", "Carnivoro", "Otro" }));
        tipoDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoDietaActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Preferencia alimento:");

        preferenciaAlimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preferenciaAlimentoActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Si es domesticable, marque la casilla:");

        domesticable.setBackground(new java.awt.Color(255, 204, 204));
        domesticable.setForeground(new java.awt.Color(255, 255, 255));
        domesticable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domesticableActionPerformed(evt);
            }
        });

        guardar.setBackground(new java.awt.Color(255, 255, 255));
        guardar.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        guardar.setForeground(new java.awt.Color(0, 0, 0));
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Habitat:");

        habitatDino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                habitatDinoActionPerformed(evt);
            }
        });

        volver.setBackground(new java.awt.Color(255, 255, 255));
        volver.setFont(new java.awt.Font("URW Gothic", 0, 15)); // NOI18N
        volver.setForeground(new java.awt.Color(0, 0, 0));
        volver.setText("Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipoDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(domesticable))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(preferenciaAlimento, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(habitatDino, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(guardar)
                        .addGap(42, 42, 42)
                        .addComponent(volver)))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tipoDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(preferenciaAlimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(habitatDino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(domesticable)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guardar)
                    .addComponent(volver))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreActionPerformed

    private void tipoDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoDietaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoDietaActionPerformed

    private void preferenciaAlimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preferenciaAlimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_preferenciaAlimentoActionPerformed

    private void domesticableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domesticableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_domesticableActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
        // Validación de campos
        String nombre = this.nombre.getText().trim();
        String tipoDieta = (String) this.tipoDieta.getSelectedItem();
        String preferencia = preferenciaAlimento.getText().trim();
        boolean domesticable = this.domesticable.isSelected();
        String habitatTexto = this.habitatDino.getText().trim();

        // Validar que todos los campos estén completos
        if (nombre.isEmpty() || preferencia.isEmpty() || habitatTexto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, rellena todos los campos",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        ControladorDinosaurios controladorDino = null;
        ControladorHabitats controladorHabitats = null;
        ControladorHabitatDino controladorHabitatDino = null;

        try {
            controladorDino = new ControladorDinosaurios();
            controladorHabitats = new ControladorHabitats();
            controladorHabitatDino = new ControladorHabitatDino();

            // Crear el dinosaurio
            Dinosaurios dino = new Dinosaurios();
            dino.setNombre(nombre);
            dino.setTipo_DietaGeneral(tipoDieta);
            dino.setPreferencia_Alimento(preferencia);
            dino.setDomesticable(domesticable);

            // Guardar el dinosaurio
            if (!controladorDino.crearDino(dino)) {
                JOptionPane.showMessageDialog(this, "Error al guardar el dinosaurio",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Verificar si el hábitat ya existe en la tabla Habitats
            Habitats habitatExistente = controladorHabitats.buscarHabitatPorNombre(habitatTexto);

            if (habitatExistente == null) {
                // No existe el hábitat, lo creamos
                Habitats nuevoHabitat = new Habitats();
                nuevoHabitat.setTexto_Habitat(habitatTexto);

                if (!controladorHabitats.crearHabitat(nuevoHabitat)) {
                    // Error creando hábitat, eliminar dinosaurio creado antes para mantener integridad
                    controladorDino.eliminarDinosaurio(dino.getId_Dino());
                    JOptionPane.showMessageDialog(this, "Error al guardar el hábitat. Se eliminó el dinosaurio.",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                habitatExistente = nuevoHabitat; // Ahora el hábitat es el que acabamos de crear
            }

            // Crear la relación Dino_Habitat con el dinosaurio y el hábitat existente o recién creado
            Dino_Habitat dinoHabitat = new Dino_Habitat();
            dinoHabitat.setDino(dino);
            dinoHabitat.setHabitat(habitatExistente);  // Aquí se asigna la entidad Habitats
            dinoHabitat.setFechaInsertado(new java.util.Date());

            if (!controladorHabitatDino.crearHabitat(dinoHabitat)) {
                // Error creando la relación, eliminar dinosaurio y posiblemente el hábitat recién creado
                controladorDino.eliminarDinosaurio(dino.getId_Dino());
                // Opcional: eliminar hábitat solo si fue creado recién (debes implementar lógica si quieres)
                JOptionPane.showMessageDialog(this, "Error al asociar el hábitat al dinosaurio. Se eliminó el dinosaurio.",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            JOptionPane.showMessageDialog(this, "Dinosaurio y hábitat guardados correctamente",
                    "Éxito", JOptionPane.INFORMATION_MESSAGE);
            limpiarCampos();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error inesperado: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }//GEN-LAST:event_guardarActionPerformed

    private void habitatDinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_habitatDinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_habitatDinoActionPerformed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        // TODO add your handling code here:
        Principal frame = new Principal();
        frame.setLocationRelativeTo(null);     // Centrar en pantalla
        frame.setResizable(false);             // No redimensionable
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_volverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AñadirDino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AñadirDino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AñadirDino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AñadirDino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AñadirDino().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox domesticable;
    private javax.swing.JButton guardar;
    private javax.swing.JTextField habitatDino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField preferenciaAlimento;
    private javax.swing.JComboBox<String> tipoDieta;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
